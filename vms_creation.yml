---
###############################################
##                                           ##
## This first part will create VMs using KVM ##
##                                           ##
###############################################


- name: create VMs
  # Using server as out KVM HOST
  # Will use user solifugo instead of default ansible.cfg user (root)
  # Variables will get file mentioned below
  hosts: '{{ kvm_host }}'
  become: true
  become_user: "{{ lookup('env','USER') }}"
  vars_files:
    - variables.yml

  tasks:


    - name: List all KVM Networks
      virt_net: 
        command: list_nets
      register: exist

    #- debug: msg="{{ exist.list_nets }}"


    - name: Define Network
      virt_net:
        command: define
        name: '{{ network_name }}'
        xml: "{{ lookup('template', 'vmnetwork_template.xml.j2') }}"
      when: not network_name in exist.list_nets

    - name: Create Network
      virt_net:
        command: create
        name: '{{ network_name }}'
      when: not network_name in exist.list_nets


    - name: Modify Network
      virt_net:
        name: '{{ network_name }}'
        command: modify
        xml: "<host mac='{{ item.value.mac }}' name='{{ item.value.name }}' ip='{{ item.value.ip }}'/>"
      loop: "{{ lookup('dict', guests) }}"

    - name: Autostart Network
      virt_net:
        name: '{{ network_name }}'
        autostart: yes


    - name: Create a directory if it does not exist
    # Check and create vm_location directory if doesnt exist
    # Give enough priviledges to the directory so qemu user can use it
      file:
        path: "{{ vm_location }}"
        state: directory
        mode: '0755'

    - name: Get VM disks
    # Check if Disks are already created
      command: "ls {{ vm_location }}"
      register: disks
      changed_when: "disks.rc != 0"


    - name: Create Seed
    # Create seed using virt-builder so we get the OS image if is not already cached locally
    # Set root password, inject ssh key from kv_host, relabel selinux and update OS
      command: >
               virt-builder --format {{ file_type }} {{ os_type }}
               -o {{ vm_location }}/{{ seed_name }}.{{ file_type }}
               --root-password password:{{ root_pass }}
               --ssh-inject root
               --selinux-relabel
               --update
      when: seed_name not in disks.stdout


    - name: Duplicate Seed
      copy: 
        src={{ vm_location }}/{{ seed_name }}.{{ file_type }} 
        dest={{ vm_location }}/{{ item.value.name }}.{{ file_type }} 
      when: item.value.name not in disks.stdout
      with_dict: "{{ guests }}"  


    - name: Get list of VMs
    # Check VMs already created
      virt:
        command: "list_vms"
      register: vms


    - name: define vm
      virt:
        command: define
        xml: "{{ lookup('template', 'vms_template.xml.j2') }}"
        #uri: 'qemu:///system'
      when: item.value.name not in vms.list_vms
      with_dict: "{{ guests }}"



    - name: start vm
      virt:
        name: "{{ item.value.name }}"
        state: running
      with_dict: "{{ guests }}"


    - name: add Kbernetes line to /etc/hosts
      # Adding title to /etc/hosts file
      become: yes
      become_user: root
      lineinfile:
        dest: /etc/hosts
        line: "## KUBERNETES CLUSTER ##\n"
        state: present

    - name: add a list of hosts to /etc/hosts
    # Adding nodes names and IPs to server /etc/hosts
      become: yes
      become_user: root
      lineinfile:
        dest: /etc/hosts
        regexp: "^{{ item.value.ip }}.*$"
        line: "{{item.value.ip}} {{item.value.name}}"
        state: present
      with_dict: "{{ guests }}"



    - name: Test reachability
    # This part will make sure ssh port is open before the next steps starts
      wait_for:
        host: "{{ item.value.name }}"
        port: 22
      with_dict: "{{ guests }}"

- name: hostname
  hosts: kubernetes
  tasks: 
    - name: Update hostname using hostname
    # Change hostname of the servers
      hostname: 
        name: "{{inventory_hostname}}"


